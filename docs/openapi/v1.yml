openapi: 3.1.0
info:
  title: hackathon_22_winter_01
  version: '1.0'
servers:
  - url: 'http://localhost:8080'
paths:
  /ping:
    get:
      summary: GET /ping
      tags:
        - ping
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
      operationId: ping
      description: ヘルスチェック用のエンドポイント
  /ws:
    get:
      summary: GET /ws
      tags:
        - ws
      responses:
        '200':
          description: OK
      operationId: connect-to-ws
      description: |-
        Websocketを用いて双方向通信を行う
        - クライアント → サーバー (送信)
          - `#/components/schemas/WsRequest`型のJSON文字列をサーバーに送信します
          - `type`が`XXX`のとき`body`の型は`#/components/schemas/WsRequestBodyXXX`です
        - サーバー → クライアント (受信)
          - `#/components/schemas/WsResponse`型のJSON文字列をサーバーに送信します
          - `type`が`XXX`のとき`body`の型は`#/components/schemas/WsResponseBodyXXX`です
components:
  schemas:
    PlayerId:
      title: PlayerId
      type: string
      format: uuid
      description: プレイヤーUUID
    CardId:
      title: CardId
      type: string
      format: uuid
      description: カードUUID
    RailId:
      title: RailId
      type: string
      format: uuid
      description: レールUUID
    CardType:
      title: CardType
      type: string
      enum:
        - createRail
        - createBlock
      description: カードの効果の種類
    LifeEventType:
      title: LifeEventType
      type: string
      enum:
        - decrement
      description: ライフに関するイベントの種類
    Card:
      title: Card
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CardId'
        type:
          $ref: '#/components/schemas/CardType'
      required:
        - id
        - type
      description: カード情報
    WsRequest:
      title: WsRequest
      type: object
      properties:
        type:
          $ref: '#/components/schemas/WsRequestType'
        body:
          oneOf:
            - $ref: '#/components/schemas/WsRequestBodyLifeEvent'
            - $ref: '#/components/schemas/WsRequestBodyCardEvent'
          description: イベントの情報
      required:
        - type
        - body
      description: Websocket接続中にサーバーに送信するオブジェクト
    WsRequestType:
      title: WsRequestType
      type: string
      enum:
        - lifeEvent
        - cardEvent
      description: イベントの種類
    WsRequestBodyLifeEvent:
      title: WsRequestBodyLifeEvent
      type: object
      properties:
        type:
          $ref: '#/components/schemas/LifeEventType'
      required:
        - type
      description: ライフに関するイベントの情報
    WsRequestBodyCardEvent:
      title: WsRequestBodyCardEvent
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CardId'
        type:
          $ref: '#/components/schemas/CardType'
      required:
        - id
        - type
      description: カードに関するイベントの情報
    WsResponse:
      title: WsResponse
      type: object
      properties:
        type:
          $ref: '#/components/schemas/WsResponseType'
        body:
          oneOf:
            - $ref: '#/components/schemas/WsResponseBodyLifeChanged'
            - $ref: '#/components/schemas/WsResponseBodyCardReset'
            - $ref: '#/components/schemas/WsResponseBodyRailCreated'
            - $ref: '#/components/schemas/WsResponseBodyRailMerged'
            - $ref: '#/components/schemas/WsResponseBodyBlockCreated'
          description: イベントの情報
      required:
        - type
        - body
      description: Websocket接続中にサーバーから受信するオブジェクト
    WsResponseType:
      title: WsResponseType
      type: string
      enum:
        - lifeChanged
        - cardReset
        - railCreated
        - railMerged
        - blockCreated
      description: イベントの種類
    WsResponseBodyLifeChanged:
      type: object
      properties:
        playerId:
          $ref: '#/components/schemas/PlayerId'
        new:
          type: integer
          maximum: 3
          minimum: 0
          description: 変動後のライフ
      required:
        - playerId
        - new
      description: ライフの変動情報
    WsResponseBodyCardReset:
      type: array
      items:
        type: object
        properties:
          playerId:
            $ref: '#/components/schemas/PlayerId'
          cards:
            type: array
            items:
              $ref: '#/components/schemas/Card'
            description: リセットされたカードのリスト
        required:
          - playerId
          - cards
      description: 各プレイヤーのカードのリセット情報
    WsResponseBodyRailCreated:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RailId'
        parentId:
          $ref: '#/components/schemas/RailId'
        attackerId:
          $ref: '#/components/schemas/PlayerId'
        targetId:
          $ref: '#/components/schemas/PlayerId'
      required:
        - id
        - parentId
        - attackerId
        - targetId
      description: 新規レールの作成情報
    WsResponseBodyRailMerged:
      type: object
      properties:
        childId:
          $ref: '#/components/schemas/RailId'
        parentId:
          $ref: '#/components/schemas/RailId'
        playerId:
          $ref: '#/components/schemas/PlayerId'
      required:
        - childId
        - parentId
        - playerId
      description: レールのマージ情報
    WsResponseBodyBlockCreated:
      type: object
      properties:
        attackerId:
          $ref: '#/components/schemas/PlayerId'
        targetId:
          $ref: '#/components/schemas/PlayerId'
      required:
        - attackerId
        - targetId
      description: 新規障害物の作成情報
tags:
  - name: ping
    description: Ping API
  - name: ws
    description: Websocket API
