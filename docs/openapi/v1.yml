openapi: 3.1.0
info:
  title: hackathon_22_winter_01
  version: "1.0"
servers:
  - url: "http://localhost:8080"
paths:
  /rooms/new:
    post:
      summary: createRoom
      tags:
        - rooms
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
      operationId: createRoom
      description: 新しい部屋を作成する
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoomRequest"
        description: 部屋の情報
  /ping:
    get:
      summary: GET /ping
      tags:
        - ping
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
      operationId: ping
      description: ヘルスチェック用のエンドポイント
  /ws:
    get:
      summary: GET /ws
      tags:
        - ws
      responses:
        "200":
          description: OK
      operationId: connect-to-ws
      description: |-
        Websocketを用いて双方向通信を行う
        - クライアント → サーバー (送信)
          - `#/components/schemas/WsRequest`型のJSON文字列をサーバーに送信します
          - `type`が`XXX`のとき`body`の型は`#/components/schemas/WsRequestBodyXXX`です
        - サーバー → クライアント (受信)
          - `#/components/schemas/WsResponse`型のJSON文字列をサーバーに送信します
          - `type`が`XXX`のとき`body`の型は`#/components/schemas/WsResponseBodyXXX`です
components:
  schemas:
    RoomId:
      title: RoomId
      type: string
      format: uuid
      description: ルームUUID
    PlayerId:
      title: PlayerId
      type: string
      format: uuid
      description: プレイヤーUUID
    CardId:
      title: CardId
      type: string
      format: uuid
      description: カードUUID
    RailId:
      title: RailId
      type: string
      format: uuid
      description: レールUUID
    CardType:
      title: CardType
      type: string
      enum:
        - createRail
        - createBlock
      description: カードの効果の種類
    LifeEventType:
      title: LifeEventType
      type: string
      enum:
        - decrement
      description: ライフに関するイベントの種類
    Card:
      title: Card
      type: object
      properties:
        id:
          $ref: "#/components/schemas/CardId"
        type:
          $ref: "#/components/schemas/CardType"
      required:
        - id
        - type
      description: カード情報
    Room:
      title: Room
      type: object
      properties:
        roomId:
          $ref: "#/components/schemas/RoomId"
        players:
          type: array
          items:
            $ref: "#/components/schemas/Player"
          description: プレイヤーのリスト
        startedAt:
          type: string
          description: ゲーム開始時刻
    Player:
      title: Player
      type: object
      properties:
        playerId:
          $ref: "#/components/schemas/PlayerId"
        # TODO: 定義する
        # mainRail:
        #   $ref: '#/components/schemas/Rail'
        #   description: メインのレール
        # rails:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/Rail'
        #   description: プレイヤーのレールのリスト
        # blocks:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/Block'
        #   description: プレイヤーのブロックのリスト
        life:
          type: integer
          maximum: 3
          minimum: 0
          description: プレイヤーのライフ
      required:
        - playerId
        # - mainRail
        # - rails
        # - blocks
        - life
      description: プレイヤー情報
    CreateRoomRequest:
      title: CreateRoomRequest
      type: object
      properties:
        playerName:
          type: string
          description: プレイヤーの名前
      required:
        - playerName
      description: 部屋を作成する際に送信するリクエスト
    WsRequest:
      title: WsRequest
      type: object
      properties:
        type:
          $ref: "#/components/schemas/WsRequestType"
        body:
          oneOf:
            - $ref: "#/components/schemas/WsRequestBodyGameStartEvent"
            - $ref: "#/components/schemas/WsRequestBodyLifeEvent"
            - $ref: "#/components/schemas/WsRequestBodyCardEvent"
            - $ref: "#/components/schemas/WsRequestBodyReilMergeEvent"
          description: イベントの情報
      required:
        - type
        - body
      description: Websocket接続中にサーバーに送信するオブジェクト
    WsRequestType:
      title: WsRequestType
      type: string
      enum:
        - gameStartEvent
        - lifeEvent
        - cardEvent
        - railMergeEvent
      description: イベントの種類
    WsRequestBodyGameStartEvent:
      title: WsRequestBodyGameStartEvent
      type: object
      properties:
        name:
          type: string
          description: プレイヤーの名前
      required:
        - name
      description: ゲーム開始時にサーバーに送信するオブジェクト
    WsRequestBodyLifeEvent:
      title: WsRequestBodyLifeEvent
      type: object
      properties:
        type:
          $ref: "#/components/schemas/LifeEventType"
      required:
        - type
      description: ライフに関するイベントの情報
    WsRequestBodyCardEvent:
      title: WsRequestBodyCardEvent
      type: object
      properties:
        id:
          $ref: "#/components/schemas/CardId"
        type:
          $ref: "#/components/schemas/CardType"
      required:
        - id
        - type
      description: カードに関するイベントの情報
    WsRequestBodyReilMergeEvent:
      title: WsRequestBodyReilMergeEvent
      type: object
      properties:
        childId:
          $ref: "#/components/schemas/RailId"
        parentId:
          $ref: "#/components/schemas/RailId"
      required:
        - childId
        - parentId
      description: レールのマージに関するイベントの情報
    WsResponse:
      title: WsResponse
      type: object
      properties:
        type:
          $ref: "#/components/schemas/WsResponseType"
        body:
          oneOf:
            - $ref: "#/components/schemas/WsResponseBodyConnected"
            - $ref: "#/components/schemas/WsResponseBodyGameStarted"
            - $ref: "#/components/schemas/WsResponseBodyLifeChanged"
            - $ref: "#/components/schemas/WsResponseBodyCardReset"
            - $ref: "#/components/schemas/WsResponseBodyRailCreated"
            - $ref: "#/components/schemas/WsResponseBodyRailMerged"
            - $ref: "#/components/schemas/WsResponseBodyBlockCreated"
          description: イベントの情報
      required:
        - type
        - body
      description: Websocket接続中にサーバーから受信するオブジェクト
    WsResponseType:
      title: WsResponseType
      type: string
      enum:
        - connected
        - gameStarted
        - lifeChanged
        - cardReset
        - railCreated
        - railMerged
        - blockCreated
      description: イベントの種類
    WsResponseBodyConnected:
      type: object
      properties:
        playerId:
          $ref: "#/components/schemas/PlayerId"
      required:
        - playerId
      description: 接続したプレイヤーのID
    WsResponseBodyGameStarted:
      type: object
      properties:
        players:
          type: array
          items:
            $ref: "#/components/schemas/Player"
          description: 各プレイヤーの情報
        cards:
          type: array
          items:
            $ref: "#/components/schemas/Card"
          description: ゲーム開始時のカードのリスト
      required:
        - players
        - cards
      description: ゲーム開始時の情報
    WsResponseBodyLifeChanged:
      type: object
      properties:
        playerId:
          $ref: "#/components/schemas/PlayerId"
        new:
          type: integer
          maximum: 3
          minimum: 0
          description: 変動後のライフ
      required:
        - playerId
        - new
      description: ライフの変動情報
    WsResponseBodyCardReset:
      type: array
      items:
        type: object
        properties:
          playerId:
            $ref: "#/components/schemas/PlayerId"
          cards:
            type: array
            items:
              $ref: "#/components/schemas/Card"
            description: リセットされたカードのリスト
        required:
          - playerId
          - cards
      description: 各プレイヤーのカードのリセット情報
    WsResponseBodyRailCreated:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/RailId"
        parentId:
          $ref: "#/components/schemas/RailId"
        attackerId:
          $ref: "#/components/schemas/PlayerId"
        targetId:
          $ref: "#/components/schemas/PlayerId"
      required:
        - id
        - parentId
        - attackerId
        - targetId
      description: 新規レールの作成情報
    WsResponseBodyRailMerged:
      type: object
      properties:
        childId:
          $ref: "#/components/schemas/RailId"
        parentId:
          $ref: "#/components/schemas/RailId"
        playerId:
          $ref: "#/components/schemas/PlayerId"
      required:
        - childId
        - parentId
        - playerId
      description: レールのマージ情報
    WsResponseBodyBlockCreated:
      type: object
      properties:
        attackerId:
          $ref: "#/components/schemas/PlayerId"
        targetId:
          $ref: "#/components/schemas/PlayerId"
      required:
        - attackerId
        - targetId
      description: 新規障害物の作成情報
tags:
  - name: ping
    description: Ping API
  - name: ws
    description: Websocket API
  - name: rooms
    description: Rooms API
